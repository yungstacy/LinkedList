/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
 
 //считаем длину списка с dummyNode (находим len)
 //итерируемся на len-n-1 
 //node next=node.next.next



class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode dummyNode = new ListNode(0,head); //dummy
    
        int length = 0;
        ListNode curr = dummyNode; //-1 нода dummy

        while (curr != null) {
            curr = curr.next;
            length++;
        }
        curr = dummyNode; // ставим dummy в конец

        for (int i = 0; i < length - n - 1; i++) { //с конца списка идем назад в предыдущую ноду перед нужной, где n - номер ноды которую нужно удалить и -1 тк еще dummy нода
            curr = curr.next;
        }

        
        curr.next = curr.next.next;

        return dummyNode.next; 
    }

    }
